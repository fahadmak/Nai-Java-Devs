apply plugin: 'com.android.application'
apply from: rootProject.file('app/coverage.gradle')
apply from: rootProject.file('config/quality.gradle')
apply from: rootProject.file('gradle/git_hooks.gradle')

def globalConf = rootProject.ext

android {
    compileSdkVersion 28
    testOptions.unitTests.includeAndroidResources = true
    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {

    api "com.android.support:design:$globalConf.supportLibraryVersion"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$globalConf.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$globalConf.supportLibraryVersion"
    implementation "com.android.support:exifinterface:$globalConf.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$globalConf.supportLibraryVersion"
    implementation "de.hdodenhof:circleimageview:$globalConf.circleImageViewVersion"
    implementation "com.squareup.retrofit2:retrofit:$globalConf.retrofitVersion"
    implementation "com.squareup.picasso:picasso:$globalConf.picassoVersion"
    implementation "com.squareup.retrofit2:converter-gson:$globalConf.retrofitVersion"
    implementation "com.android.support:support-v4:$globalConf.supportLibraryVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:" +
            "$globalConf.espressoVersion"
    testImplementation "junit:junit:$globalConf.junitVersion"
    testImplementation "org.robolectric:robolectric:$globalConf.robolectricVersion"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation "com.android.support.test:rules:1.0.2"

    // Espresso UI Testing dependencies.
    androidTestImplementation "com.android.support.test.espresso:espresso-core:" +
            "$globalConf.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:" +
            "$globalConf.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:" +
            "$globalConf.espressoVersion"

    // Optional -- Mockito framework
    def mockito_version ="3.0.0"
    testImplementation "org.mockito:mockito-core:$mockito_version"


    implementation 'com.squareup.okhttp3:okhttp:4.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    def dagger_version ="2.22"

    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version" // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
}
